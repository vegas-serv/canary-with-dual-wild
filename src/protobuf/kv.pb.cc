// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kv.proto

#include "kv.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Canary {
namespace protobuf {
namespace kv {
PROTOBUF_CONSTEXPR ValueWrapper::ValueWrapper(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ValueWrapperDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValueWrapperDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValueWrapperDefaultTypeInternal() {}
  union {
    ValueWrapper _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValueWrapperDefaultTypeInternal _ValueWrapper_default_instance_;
PROTOBUF_CONSTEXPR ArrayType::ArrayType(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.values_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ArrayTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArrayTypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArrayTypeDefaultTypeInternal() {}
  union {
    ArrayType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArrayTypeDefaultTypeInternal _ArrayType_default_instance_;
PROTOBUF_CONSTEXPR KeyValuePair::KeyValuePair(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KeyValuePairDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyValuePairDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyValuePairDefaultTypeInternal() {}
  union {
    KeyValuePair _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyValuePairDefaultTypeInternal _KeyValuePair_default_instance_;
PROTOBUF_CONSTEXPR MapType::MapType(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MapTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MapTypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MapTypeDefaultTypeInternal() {}
  union {
    MapType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MapTypeDefaultTypeInternal _MapType_default_instance_;
}  // namespace kv
}  // namespace protobuf
}  // namespace Canary
static ::_pb::Metadata file_level_metadata_kv_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_kv_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_kv_2eproto = nullptr;

const uint32_t TableStruct_kv_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Canary::protobuf::kv::ValueWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Canary::protobuf::kv::ValueWrapper, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Canary::protobuf::kv::ValueWrapper, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Canary::protobuf::kv::ArrayType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Canary::protobuf::kv::ArrayType, _impl_.values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Canary::protobuf::kv::KeyValuePair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Canary::protobuf::kv::KeyValuePair, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::Canary::protobuf::kv::KeyValuePair, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Canary::protobuf::kv::MapType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Canary::protobuf::kv::MapType, _impl_.items_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Canary::protobuf::kv::ValueWrapper)},
  { 13, -1, -1, sizeof(::Canary::protobuf::kv::ArrayType)},
  { 20, -1, -1, sizeof(::Canary::protobuf::kv::KeyValuePair)},
  { 28, -1, -1, sizeof(::Canary::protobuf::kv::MapType)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Canary::protobuf::kv::_ValueWrapper_default_instance_._instance,
  &::Canary::protobuf::kv::_ArrayType_default_instance_._instance,
  &::Canary::protobuf::kv::_KeyValuePair_default_instance_._instance,
  &::Canary::protobuf::kv::_MapType_default_instance_._instance,
};

const char descriptor_table_protodef_kv_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\010kv.proto\022\022Canary.protobuf.kv\"\327\001\n\014Value"
  "Wrapper\022\023\n\tstr_value\030\001 \001(\tH\000\022\023\n\tint_valu"
  "e\030\002 \001(\005H\000\022\026\n\014double_value\030\003 \001(\001H\000\0224\n\013arr"
  "ay_value\030\004 \001(\0132\035.Canary.protobuf.kv.Arra"
  "yTypeH\000\0220\n\tmap_value\030\005 \001(\0132\033.Canary.prot"
  "obuf.kv.MapTypeH\000\022\024\n\nbool_value\030\006 \001(\010H\000B"
  "\007\n\005value\"=\n\tArrayType\0220\n\006values\030\001 \003(\0132 ."
  "Canary.protobuf.kv.ValueWrapper\"L\n\014KeyVa"
  "luePair\022\013\n\003key\030\001 \001(\t\022/\n\005value\030\002 \001(\0132 .Ca"
  "nary.protobuf.kv.ValueWrapper\":\n\007MapType"
  "\022/\n\005items\030\001 \003(\0132 .Canary.protobuf.kv.Key"
  "ValuePairb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_kv_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_kv_2eproto = {
    false, false, 457, descriptor_table_protodef_kv_2eproto,
    "kv.proto",
    &descriptor_table_kv_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_kv_2eproto::offsets,
    file_level_metadata_kv_2eproto, file_level_enum_descriptors_kv_2eproto,
    file_level_service_descriptors_kv_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_kv_2eproto_getter() {
  return &descriptor_table_kv_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_kv_2eproto(&descriptor_table_kv_2eproto);
namespace Canary {
namespace protobuf {
namespace kv {

// ===================================================================

class ValueWrapper::_Internal {
 public:
  static const ::Canary::protobuf::kv::ArrayType& array_value(const ValueWrapper* msg);
  static const ::Canary::protobuf::kv::MapType& map_value(const ValueWrapper* msg);
};

const ::Canary::protobuf::kv::ArrayType&
ValueWrapper::_Internal::array_value(const ValueWrapper* msg) {
  return *msg->_impl_.value_.array_value_;
}
const ::Canary::protobuf::kv::MapType&
ValueWrapper::_Internal::map_value(const ValueWrapper* msg) {
  return *msg->_impl_.value_.map_value_;
}
void ValueWrapper::set_allocated_array_value(::Canary::protobuf::kv::ArrayType* array_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (array_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(array_value);
    if (message_arena != submessage_arena) {
      array_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, array_value, submessage_arena);
    }
    set_has_array_value();
    _impl_.value_.array_value_ = array_value;
  }
  // @@protoc_insertion_point(field_set_allocated:Canary.protobuf.kv.ValueWrapper.array_value)
}
void ValueWrapper::set_allocated_map_value(::Canary::protobuf::kv::MapType* map_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (map_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(map_value);
    if (message_arena != submessage_arena) {
      map_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, map_value, submessage_arena);
    }
    set_has_map_value();
    _impl_.value_.map_value_ = map_value;
  }
  // @@protoc_insertion_point(field_set_allocated:Canary.protobuf.kv.ValueWrapper.map_value)
}
ValueWrapper::ValueWrapper(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Canary.protobuf.kv.ValueWrapper)
}
ValueWrapper::ValueWrapper(const ValueWrapper& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ValueWrapper* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kStrValue: {
      _this->_internal_set_str_value(from._internal_str_value());
      break;
    }
    case kIntValue: {
      _this->_internal_set_int_value(from._internal_int_value());
      break;
    }
    case kDoubleValue: {
      _this->_internal_set_double_value(from._internal_double_value());
      break;
    }
    case kArrayValue: {
      _this->_internal_mutable_array_value()->::Canary::protobuf::kv::ArrayType::MergeFrom(
          from._internal_array_value());
      break;
    }
    case kMapValue: {
      _this->_internal_mutable_map_value()->::Canary::protobuf::kv::MapType::MergeFrom(
          from._internal_map_value());
      break;
    }
    case kBoolValue: {
      _this->_internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Canary.protobuf.kv.ValueWrapper)
}

inline void ValueWrapper::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_value();
}

ValueWrapper::~ValueWrapper() {
  // @@protoc_insertion_point(destructor:Canary.protobuf.kv.ValueWrapper)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ValueWrapper::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void ValueWrapper::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ValueWrapper::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:Canary.protobuf.kv.ValueWrapper)
  switch (value_case()) {
    case kStrValue: {
      _impl_.value_.str_value_.Destroy();
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kArrayValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.array_value_;
      }
      break;
    }
    case kMapValue: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.map_value_;
      }
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void ValueWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:Canary.protobuf.kv.ValueWrapper)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValueWrapper::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string str_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_str_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Canary.protobuf.kv.ValueWrapper.str_value"));
        } else
          goto handle_unusual;
        continue;
      // int32 int_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_int_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double double_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          _internal_set_double_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // .Canary.protobuf.kv.ArrayType array_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_array_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Canary.protobuf.kv.MapType map_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_map_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool bool_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _internal_set_bool_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ValueWrapper::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Canary.protobuf.kv.ValueWrapper)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string str_value = 1;
  if (_internal_has_str_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_str_value().data(), static_cast<int>(this->_internal_str_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Canary.protobuf.kv.ValueWrapper.str_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_str_value(), target);
  }

  // int32 int_value = 2;
  if (_internal_has_int_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_int_value(), target);
  }

  // double double_value = 3;
  if (_internal_has_double_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(3, this->_internal_double_value(), target);
  }

  // .Canary.protobuf.kv.ArrayType array_value = 4;
  if (_internal_has_array_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::array_value(this),
        _Internal::array_value(this).GetCachedSize(), target, stream);
  }

  // .Canary.protobuf.kv.MapType map_value = 5;
  if (_internal_has_map_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::map_value(this),
        _Internal::map_value(this).GetCachedSize(), target, stream);
  }

  // bool bool_value = 6;
  if (_internal_has_bool_value()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_bool_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Canary.protobuf.kv.ValueWrapper)
  return target;
}

size_t ValueWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Canary.protobuf.kv.ValueWrapper)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // string str_value = 1;
    case kStrValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_str_value());
      break;
    }
    // int32 int_value = 2;
    case kIntValue: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_int_value());
      break;
    }
    // double double_value = 3;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // .Canary.protobuf.kv.ArrayType array_value = 4;
    case kArrayValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.array_value_);
      break;
    }
    // .Canary.protobuf.kv.MapType map_value = 5;
    case kMapValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.map_value_);
      break;
    }
    // bool bool_value = 6;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ValueWrapper::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ValueWrapper::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ValueWrapper::GetClassData() const { return &_class_data_; }


void ValueWrapper::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ValueWrapper*>(&to_msg);
  auto& from = static_cast<const ValueWrapper&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Canary.protobuf.kv.ValueWrapper)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kStrValue: {
      _this->_internal_set_str_value(from._internal_str_value());
      break;
    }
    case kIntValue: {
      _this->_internal_set_int_value(from._internal_int_value());
      break;
    }
    case kDoubleValue: {
      _this->_internal_set_double_value(from._internal_double_value());
      break;
    }
    case kArrayValue: {
      _this->_internal_mutable_array_value()->::Canary::protobuf::kv::ArrayType::MergeFrom(
          from._internal_array_value());
      break;
    }
    case kMapValue: {
      _this->_internal_mutable_map_value()->::Canary::protobuf::kv::MapType::MergeFrom(
          from._internal_map_value());
      break;
    }
    case kBoolValue: {
      _this->_internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ValueWrapper::CopyFrom(const ValueWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Canary.protobuf.kv.ValueWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueWrapper::IsInitialized() const {
  return true;
}

void ValueWrapper::InternalSwap(ValueWrapper* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValueWrapper::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_kv_2eproto_getter, &descriptor_table_kv_2eproto_once,
      file_level_metadata_kv_2eproto[0]);
}

// ===================================================================

class ArrayType::_Internal {
 public:
};

ArrayType::ArrayType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Canary.protobuf.kv.ArrayType)
}
ArrayType::ArrayType(const ArrayType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ArrayType* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.values_){from._impl_.values_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Canary.protobuf.kv.ArrayType)
}

inline void ArrayType::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.values_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ArrayType::~ArrayType() {
  // @@protoc_insertion_point(destructor:Canary.protobuf.kv.ArrayType)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ArrayType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_.~RepeatedPtrField();
}

void ArrayType::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ArrayType::Clear() {
// @@protoc_insertion_point(message_clear_start:Canary.protobuf.kv.ArrayType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayType::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Canary.protobuf.kv.ValueWrapper values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArrayType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Canary.protobuf.kv.ArrayType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Canary.protobuf.kv.ValueWrapper values = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_values_size()); i < n; i++) {
    const auto& repfield = this->_internal_values(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Canary.protobuf.kv.ArrayType)
  return target;
}

size_t ArrayType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Canary.protobuf.kv.ArrayType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Canary.protobuf.kv.ValueWrapper values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->_impl_.values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArrayType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ArrayType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArrayType::GetClassData() const { return &_class_data_; }


void ArrayType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ArrayType*>(&to_msg);
  auto& from = static_cast<const ArrayType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Canary.protobuf.kv.ArrayType)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.values_.MergeFrom(from._impl_.values_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArrayType::CopyFrom(const ArrayType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Canary.protobuf.kv.ArrayType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayType::IsInitialized() const {
  return true;
}

void ArrayType::InternalSwap(ArrayType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_kv_2eproto_getter, &descriptor_table_kv_2eproto_once,
      file_level_metadata_kv_2eproto[1]);
}

// ===================================================================

class KeyValuePair::_Internal {
 public:
  static const ::Canary::protobuf::kv::ValueWrapper& value(const KeyValuePair* msg);
};

const ::Canary::protobuf::kv::ValueWrapper&
KeyValuePair::_Internal::value(const KeyValuePair* msg) {
  return *msg->_impl_.value_;
}
KeyValuePair::KeyValuePair(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Canary.protobuf.kv.KeyValuePair)
}
KeyValuePair::KeyValuePair(const KeyValuePair& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  KeyValuePair* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::Canary::protobuf::kv::ValueWrapper(*from._impl_.value_);
  }
  // @@protoc_insertion_point(copy_constructor:Canary.protobuf.kv.KeyValuePair)
}

inline void KeyValuePair::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KeyValuePair::~KeyValuePair() {
  // @@protoc_insertion_point(destructor:Canary.protobuf.kv.KeyValuePair)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KeyValuePair::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void KeyValuePair::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KeyValuePair::Clear() {
// @@protoc_insertion_point(message_clear_start:Canary.protobuf.kv.KeyValuePair)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValuePair::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Canary.protobuf.kv.KeyValuePair.key"));
        } else
          goto handle_unusual;
        continue;
      // .Canary.protobuf.kv.ValueWrapper value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KeyValuePair::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Canary.protobuf.kv.KeyValuePair)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Canary.protobuf.kv.KeyValuePair.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // .Canary.protobuf.kv.ValueWrapper value = 2;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Canary.protobuf.kv.KeyValuePair)
  return target;
}

size_t KeyValuePair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Canary.protobuf.kv.KeyValuePair)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .Canary.protobuf.kv.ValueWrapper value = 2;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KeyValuePair::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KeyValuePair::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KeyValuePair::GetClassData() const { return &_class_data_; }


void KeyValuePair::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KeyValuePair*>(&to_msg);
  auto& from = static_cast<const KeyValuePair&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Canary.protobuf.kv.KeyValuePair)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::Canary::protobuf::kv::ValueWrapper::MergeFrom(
        from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KeyValuePair::CopyFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Canary.protobuf.kv.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValuePair::IsInitialized() const {
  return true;
}

void KeyValuePair::InternalSwap(KeyValuePair* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValuePair::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_kv_2eproto_getter, &descriptor_table_kv_2eproto_once,
      file_level_metadata_kv_2eproto[2]);
}

// ===================================================================

class MapType::_Internal {
 public:
};

MapType::MapType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Canary.protobuf.kv.MapType)
}
MapType::MapType(const MapType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MapType* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Canary.protobuf.kv.MapType)
}

inline void MapType::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MapType::~MapType() {
  // @@protoc_insertion_point(destructor:Canary.protobuf.kv.MapType)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MapType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void MapType::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MapType::Clear() {
// @@protoc_insertion_point(message_clear_start:Canary.protobuf.kv.MapType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MapType::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Canary.protobuf.kv.KeyValuePair items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MapType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Canary.protobuf.kv.MapType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Canary.protobuf.kv.KeyValuePair items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Canary.protobuf.kv.MapType)
  return target;
}

size_t MapType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Canary.protobuf.kv.MapType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Canary.protobuf.kv.KeyValuePair items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MapType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MapType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MapType::GetClassData() const { return &_class_data_; }


void MapType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MapType*>(&to_msg);
  auto& from = static_cast<const MapType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Canary.protobuf.kv.MapType)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MapType::CopyFrom(const MapType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Canary.protobuf.kv.MapType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapType::IsInitialized() const {
  return true;
}

void MapType::InternalSwap(MapType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MapType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_kv_2eproto_getter, &descriptor_table_kv_2eproto_once,
      file_level_metadata_kv_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace kv
}  // namespace protobuf
}  // namespace Canary
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Canary::protobuf::kv::ValueWrapper*
Arena::CreateMaybeMessage< ::Canary::protobuf::kv::ValueWrapper >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Canary::protobuf::kv::ValueWrapper >(arena);
}
template<> PROTOBUF_NOINLINE ::Canary::protobuf::kv::ArrayType*
Arena::CreateMaybeMessage< ::Canary::protobuf::kv::ArrayType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Canary::protobuf::kv::ArrayType >(arena);
}
template<> PROTOBUF_NOINLINE ::Canary::protobuf::kv::KeyValuePair*
Arena::CreateMaybeMessage< ::Canary::protobuf::kv::KeyValuePair >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Canary::protobuf::kv::KeyValuePair >(arena);
}
template<> PROTOBUF_NOINLINE ::Canary::protobuf::kv::MapType*
Arena::CreateMaybeMessage< ::Canary::protobuf::kv::MapType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Canary::protobuf::kv::MapType >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
